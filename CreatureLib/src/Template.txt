fn (summonid: &mut CreatureID, creaturesize: &mut CreatureSize, &mut Hostility) {
    let summonid;
    match EnemySummon {
        Hostility(H) if H = True => match {
            CreatureSize(CS) if CS = 1 => match {
                summonid(SID) if SID = 1 => ::new(),
                summonid(SID) if SID = 2 => ::new(),
            }
            CreatureSize(CS) if CS = 2 => match {
                summonid(SID) if SID = 1 => ::new(),
                summonid(SID) if SID = 2 => ::new(),
            }
        }
        Hostility(H) if H = False => match {
            CreatureSize(CS) if CS = 1 => match {
                summonid(SID) if SID = 1 => ::New(),
                summon(SID) if SID = 2 => ::New(),
            }
            CreatureSize(CS) if CS = 2 => match {
                summonid(SID) if SID = 1 => ::New(rand::RandInt(10 .. 20));
            }
        }
        _ => {
            let control_loop = ControlFlow::Exit;
        }
    }
}
